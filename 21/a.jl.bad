# <<vA ^>>A vA ^A <<vA ^>>A A <<vA >A ^>A   A <A v>A  A ^A <vA ^>A A <A >A <<vA >A ^>A A A <A v>A ^A 
# <v<A >>^A vA ^A  <vA   <A A >>^A  A  vA <^A >A   A vA ^A <vA >^A A <A >A <v<A >A >^A A A vA <^A >A 
function readfile(filename::String)
  @show filename
  lines = readlines(filename)
  return lines
end

DIR_KEYPAD = Dict(
  '^' => CartesianIndex(1,2),
  'A' => CartesianIndex(1,3),
  '<' => CartesianIndex(2,1),
  'v' => CartesianIndex(2,2),
  '>' => CartesianIndex(2,3),
)

NUMERIC_KEYPAD = Dict(
  '7' => CartesianIndex(1,1),
  '8' => CartesianIndex(1,2),
  '9' => CartesianIndex(1,3),
  '4' => CartesianIndex(2,1),
  '5' => CartesianIndex(2,2),
  '6' => CartesianIndex(2,3),
  '1' => CartesianIndex(3,1),
  '2' => CartesianIndex(3,2),
  '3' => CartesianIndex(3,3),
  '0' => CartesianIndex(4,2),
  'A' => CartesianIndex(4,3),
)

function parseKeys(line)
  return [ only(i) for i in split(line, "") ]
end

function keyseq(map, from, to)
  seq = []
  start_pos = map[from]
  end_pos = map[to]
  translation = end_pos - start_pos

  if translation[1] < 0
    push!(seq, '^'^abs(translation[1]))
  end
  if translation[2] < 0
    push!(seq, '<'^abs(translation[2]))
  end
  if translation[1] > 0
    push!(seq, 'v'^translation[1]) 
  end
  if translation[2] > 0
    push!(seq, '>'^translation[2]) 
  end
  push!(seq, 'A')
  #@show from, to, translation, join(seq)
  return join(seq)
end

function seqDir(keycodes)
  last = 'A'
  presses = []
  @show keycodes

  for k in keycodes
    push!(presses, keyseq(DIR_KEYPAD, last, k))
    last = k
  end
   
  return join(presses)
end

function shortestSeq(dirs)
  return ""
end

function seqNumeric(keycodes)
  last = 'A'
  presses = []
  @show keycodes

  for k in keycodes
    push!(presses, keyseq(NUMERIC_KEYPAD, last, k))
    last = k
  end
   
  return join(presses)
end

function fullseq(keycodes)
  nseq = seqNumeric(keycodes)
  @show shortestSeq(nseq)
  firstseq = seqDir(nseq)
  secondseq = seqDir(firstseq)
  @show secondseq
  @show firstseq
  @show nseq

  return secondseq
end

function demo()
  npad = fill(' ', 4, 3)
  for i in keys(NUMERIC_KEYPAD)
    pos = NUMERIC_KEYPAD[i]
    npad[pos] = i
  end
  display(npad)

  dpad = fill(' ', 2, 3)
  for i in keys(DIR_KEYPAD)
    pos = DIR_KEYPAD[i]
    dpad[pos] = i
  end
  display(dpad)
end

function main(args)
  if length(args) != 1
    throw("no input!")
  end

  filename = args[1]
  lines = readfile(filename)
  @show lines

  #DIR_KEYPAD |> display
  #NUMERIC_KEYPAD |> display
  @show demo()

  seqs = []
  #for line in lines[1:5]
  for line in lines[5:5]
    keycodes = parseKeys(line)
    seq = fullseq(keycodes)
    push!(seqs, (line, seq))
  end
  @show seqs
  @show map(s -> (length(s[2]), parse(Int, s[1][1:3]) ), seqs)
  @show map(s -> (parse(Int, s[1][1:3]) * length(s[2])), seqs) |> sum
end
main(ARGS)
